{
  "stats": {
    "suites": 6,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2024-08-30T14:04:26.090Z",
    "end": "2024-08-30T14:04:28.458Z",
    "duration": 2368,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3e788fa6-582e-489b-affd-d248a1fb39e4",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "883d43e5-bbfc-4831-88c4-ea61cbc6f667",
          "title": "Adding a new Pet",
          "fullFile": "C:\\Users\\Svitlana_Krotova\\Documents\\API\\specs\\add,pet.spec.js",
          "file": "\\specs\\add,pet.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should allow adding a new Pet",
              "fullTitle": "Adding a new Pet should allow adding a new Pet",
              "timedOut": false,
              "duration": 661,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newPetData = {\n  id: 160,\n  category: {\n    id: 0,\n    name: \"rats\"\n  },\n  name: \"Yohanes\",\n  photoUrls: [\n    \"https://i.pinimg.com/originals/2d/5d/18/2d5d189c16cfcc3bcc7004b67c5f7d73.jpg\"\n  ],\n  tags: [\n    {\n      id: 0,\n      name: \"ttt\"\n    }\n  ],\n  status: \"available\"\n};\nconst response = await axios.post('https://petstore.swagger.io/v2/pet', newPetData);\nexpect(response.status).to.equal(200);\nexpect(response.data).to.have.property('name', newPetData.name);\nexpect(response.data).to.have.property('status', newPetData.status);\nexpect(response.data.category).to.have.property('name', newPetData.category.name);\nexpect(response.data.tags[0]).to.have.property('name', newPetData.tags[0].name);\nexpect(response.data.id).to.not.equal(0); \nconsole.log('Pet created with photo:', response.data);",
              "err": {},
              "uuid": "9e137c38-09fc-4ddb-8d47-945f7cecf694",
              "parentUUID": "883d43e5-bbfc-4831-88c4-ea61cbc6f667",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9e137c38-09fc-4ddb-8d47-945f7cecf694"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 661,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1e448a8f-3984-475a-9832-c04c8a9d348b",
          "title": " User List Creation",
          "fullFile": "C:\\Users\\Svitlana_Krotova\\Documents\\API\\specs\\create.list.spec.js",
          "file": "\\specs\\create.list.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "allows creating a List of users",
              "fullTitle": " User List Creation allows creating a List of users",
              "timedOut": false,
              "duration": 282,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const userData = [\n{\n  id: 0,\n  username: \"Svet\",\n  firstName: \"Testk\",\n  lastName: \"Userk\",\n  email: \"testuser2@example.com\",\n  password: \"qwerty\",\n  phone: \"2565656\",\n  userStatus: 0\n}\n];\nconst response = await axios.post('https://petstore.swagger.io/v2/user/createWithList', userData);\nexpect(response.status).to.equal(200);\nconst getResponse = await axios.get(`https://petstore.swagger.io/v2/user/${userData[0].username}`);\nexpect(getResponse.status).to.eq(200);",
              "err": {},
              "uuid": "60afcf68-9d95-4c8f-a6a3-58ccf2f731d5",
              "parentUUID": "1e448a8f-3984-475a-9832-c04c8a9d348b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "60afcf68-9d95-4c8f-a6a3-58ccf2f731d5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 282,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "096c12b3-d3bf-473d-84c4-c4c456e252c2",
          "title": " User Creation",
          "fullFile": "C:\\Users\\Svitlana_Krotova\\Documents\\API\\specs\\create.user.spec.js",
          "file": "\\specs\\create.user.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "allows creating a User",
              "fullTitle": " User Creation allows creating a User",
              "timedOut": false,
              "duration": 287,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const userData = {\n  id: 0,\n  username: \"Claire\",\n  firstName: \"Test\",\n  lastName: \"User\",\n  email: \"testuser@example.com\",\n  password: \"password123\",\n  phone: \"123-456-7890\",\n  userStatus: 0\n};\nconst response = await axios.post('https://petstore.swagger.io/v2/user', userData);\nexpect(response.status).to.equal(200);\nconst getResponse = await axios.get(`https://petstore.swagger.io/v2/user/${userData.username}`);\nexpect(getResponse.status).to.eq(200);",
              "err": {},
              "uuid": "4a7474eb-8869-492d-aa5d-c16b236df25a",
              "parentUUID": "096c12b3-d3bf-473d-84c4-c4c456e252c2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4a7474eb-8869-492d-aa5d-c16b236df25a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 287,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cfbd888c-d004-4bcd-9333-c30f5185f223",
          "title": "Deleting a Pet",
          "fullFile": "C:\\Users\\Svitlana_Krotova\\Documents\\API\\specs\\delete.spec.js",
          "file": "\\specs\\delete.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should allow delete a Pet",
              "fullTitle": "Deleting a Pet should allow delete a Pet",
              "timedOut": false,
              "duration": 561,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newPetData = {\n  id: 162,\n  category: {\n    id: 0,\n    name: \"dogs\"\n  },\n  name: \"Parker\",\n  photoUrls: [\n    \"url\"\n  ],\n  tags: [\n    {\n      id: 0,\n      name: \"ttt\"\n    }\n  ],\n  status: \"available\"\n};\n\n   \n  const createResponse = await axios.post('https://petstore.swagger.io/v2/pet', newPetData);\n  expect(createResponse.status).to.equal(200);\n  \n  const getResponseBeforeDelete = await axios.get(`https://petstore.swagger.io/v2/pet/${newPetData.id}`);\n  expect(getResponseBeforeDelete.status).to.equal(200);\n\n\n  const delResponse = await axios.delete(`https://petstore.swagger.io/v2/pet/${newPetData.id}`);\n  expect(delResponse.status).to.equal(200);\n  \n\ntry {\n  await axios.get(`https://petstore.swagger.io/v2/pet/${newPetData.id}`);\n  throw new Error('Pet was not deleted successfully');\n} catch (error) {\n  expect(error.response.status).to.equal(404);\n  }",
              "err": {},
              "uuid": "746cb896-4db7-4dce-b8b3-44a371cd3bef",
              "parentUUID": "cfbd888c-d004-4bcd-9333-c30f5185f223",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "746cb896-4db7-4dce-b8b3-44a371cd3bef"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 561,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "97869b0f-264c-44e4-8aa9-0545aca08d53",
          "title": "Login and Logout Verification",
          "fullFile": "C:\\Users\\Svitlana_Krotova\\Documents\\API\\specs\\login.spec.js",
          "file": "\\specs\\login.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should successfully log in ",
              "fullTitle": "Login and Logout Verification should successfully log in ",
              "timedOut": false,
              "duration": 140,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const username = 'Claire';\nconst password = 'password123';\n\nconst response = await axios.get(`https://petstore.swagger.io/v2/user/login?username=${username}&password=${password}`);\n\nexpect(response.status).to.equal(200);\nexpect(response.data.message).to.include('logged in user session');",
              "err": {},
              "uuid": "ca85600f-53e9-4001-940b-e012b020235b",
              "parentUUID": "97869b0f-264c-44e4-8aa9-0545aca08d53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully log out ",
              "fullTitle": "Login and Logout Verification should successfully log out ",
              "timedOut": false,
              "duration": 143,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const logoutResponse = await axios.get(`https://petstore.swagger.io/v2/user/logout`);\n  \n  expect(logoutResponse.status).to.equal(200);\n  expect(logoutResponse.data.message).to.include('ok');",
              "err": {},
              "uuid": "0e0344e1-9800-4ef0-b97e-d12a42055e64",
              "parentUUID": "97869b0f-264c-44e4-8aa9-0545aca08d53",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ca85600f-53e9-4001-940b-e012b020235b",
            "0e0344e1-9800-4ef0-b97e-d12a42055e64"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 283,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "be811ae4-9b8d-44ae-b82e-d7d33c99e9fd",
          "title": "Pet Data Update",
          "fullFile": "C:\\Users\\Svitlana_Krotova\\Documents\\API\\specs\\update.pet.spec.js",
          "file": "\\specs\\update.pet.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "allows updating Pet’s image, name and status",
              "fullTitle": "Pet Data Update allows updating Pet’s image, name and status",
              "timedOut": false,
              "duration": 277,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const petData = {\n    id: 160,\n    category: {\n      id: 0,\n      name: \"rats\"\n    },\n    name: \"Martin\", // new name\n    photoUrls: [\n      \"https://i.pinimg.com/originals/dd/5b/8e/dd5b8e711899ca9acd7032baad1ce280.jpg\" // new url\n    ],\n    tags: [\n      {\n        id: 0,\n        name: \"ttt\"\n      }\n    ],\n    status: \"sold\" //new status\n  };\n\n  const updateResponse = await axios.put('https://petstore.swagger.io/v2/pet', petData);\n  expect(updateResponse.status).to.equal(200);\n \n  const getResponse = await axios.get(`https://petstore.swagger.io/v2/pet/${petData.id}`);\n  expect(getResponse.status).to.equal(200);\n  \n  expect(getResponse.data.photoUrls).to.include(petData.photoUrls[0]);\n  expect(getResponse.data).to.have.property('name', petData.name);\n  expect(getResponse.data).to.have.property('status', petData.status);\n  console.log('Updated data:', getResponse.data);",
              "err": {},
              "uuid": "9c28918f-ead3-4ca1-9ff0-bb83f48c22f1",
              "parentUUID": "be811ae4-9b8d-44ae-b82e-d7d33c99e9fd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9c28918f-ead3-4ca1-9ff0-bb83f48c22f1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 277,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}